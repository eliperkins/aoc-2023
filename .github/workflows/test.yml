name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  macos:
    name: macOS
    runs-on: macos-13
    env:
      SNAPSHOT: swift-DEVELOPMENT-SNAPSHOT-2023-11-27-a
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_15.0.1.app

      - name: Restore Swift development snapshot cache
        id: cache-snapshot
        uses: actions/cache@v3
        with:
          path: "${{ env.SNAPSHOT }}-osx.pkg"
          key: ${{ runner.os }}-swift-${{ env.SNAPSHOT }}

      - name: Download nightly
        if: steps.cache-snapshot.outputs.cache-hit != 'true'
        run: |
          aria2c -x 16 -s 16 "https://download.swift.org/development/xcode/$SNAPSHOT/$SNAPSHOT-osx.pkg"

      - name: Install nightly
        run: |
          sudo installer -pkg "$SNAPSHOT-osx.pkg" -target /
          export TOOLCHAINS=swift
          echo "TOOLCHAINS=$TOOLCHAINS" >> "$GITHUB_ENV"

      - name: Restore Swift Package Manager cache
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm2-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm2-

      - name: Run tests
        run: swift test --disable-xctest --enable-experimental-swift-testing --parallel

  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    container: swiftlang/swift:nightly-jammy
    steps:
      - uses: actions/checkout@v4

      - name: Restore Swift Package Manager cache
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm2-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm2-

      - name: Run tests
        run: swift test --disable-xctest --enable-experimental-swift-testing --parallel
